由于在 printf 使用 %d 进行输出，整型部分会影响最终显示的结果。

下面详细解释一下这个问题：

在计算过程中，a * 0.2、b * 0.3 和 c * 0.5 的计算确实会产生浮点数值，例如：

100 * 0.2 = 20.0
100 * 0.3 = 30.0
90 * 0.5 = 45.0
然后，如果你将这些浮点数相加，会得到 20.0 + 30.0 + 45.0 = 95.0。

问题出现在 printf 语句上，你使用的是 %d 来输出结果，然而 95.0 是一个浮点数（double 类型），使用 %d 会导致未定义的行为，因为 %d 期望一个整型数，而所传入的是浮点数的地址，系统无法正确解析。

printf("%d", a * 0.2 + b * 0.3 + c * 0.5); // 不正确  
因为类型不匹配，系统可能会输出不正确的结果（例如显示为 0 或其它意想不到的值）。

所以，你应该使用 %f

如果你希望输出的结果是整数而没有小数部分，可以直接将计算的结果转换为整数类型，或使用 %d 格式化输出时确保结果被正确处理。

由于你的目标是计算加权平均值并以整数输出，建议在打印结果之前将浮点数结果转换为整数。你可以使用 floor 函数来避免小数部分，或者简单地进行类型转换。

#include <stdio.h>  
int main() {  
    int a, b, c;  
    scanf("%d %d %d", &a, &b, &c);  
    int result = (int)(a * 0.2 + b * 0.3 + c * 0.5); // 将结果转换为整数  
    printf("%d", result); // 输出整数  
    return 0;  
}  